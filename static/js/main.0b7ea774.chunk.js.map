{"version":3,"sources":["components/section/Section.jsx","components/feedbackOptions/FeedbackOptions.jsx","components/notification/Notification.jsx","components/statistics/Statistics.jsx","App.js","index.js"],"names":["Section","title","children","className","FeedbackOptions","options","onLeaveFeedback","s","buttons","map","option","i","button","type","onClick","Notification","message","Statistics","good","neutral","bad","total","positivePercentage","App","state","this","setState","Object","values","reduce","a","b","expr","isNaN","Math","floor","keys","incrementOption","bind","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6QAiBeA,EAdC,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SACxB,OACE,oCACE,oBAAIC,UAAU,QAAd,SAAuBF,IACrBC,M,gBCwBOE,EAxBS,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,QAASC,EAAsB,EAAtBA,gBAClC,OACE,cAAC,EAAD,CAASL,MAAM,wBAAwBE,UAAU,QAAjD,SACE,qBAAKA,UAAWI,IAAEC,QAAlB,SAEIH,EAAQI,KAAI,SAACC,EAAQC,GAAT,OACV,wBACER,UAAWI,IAAEK,OACbC,KAAK,SACLC,QAAS,kBAAMR,EAAgBI,IAHjC,SAIGA,GAJUC,WCFVI,EARM,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAAH,OACnB,mBAAGb,UAAU,qBAAb,SAAmCa,K,gBC6CtBC,MA1Cf,YAAwE,IAAlDC,EAAiD,EAAjDA,KAAMC,EAA2C,EAA3CA,QAASC,EAAkC,EAAlCA,IAAKC,EAA6B,EAA7BA,MAAOC,EAAsB,EAAtBA,mBAC/C,OACE,cAAC,EAAD,CAASrB,MAAM,aAAf,SACIoB,EAGE,qBAAKlB,UAAWI,IAAEU,WAAlB,SACA,qBAAId,UAAU,aAAd,UACE,qBAAIA,UAAU,mBAAd,mBACSe,KAET,qBAAIf,UAAU,mBAAd,sBACYgB,KAEZ,qBAAIhB,UAAU,mBAAd,kBACQiB,KAER,qBAAIjB,UAAU,mBAAd,oBACUkB,KAEV,qBAAIlB,UAAU,mBAAd,uBACamB,EADb,YAhBF,cAAC,EAAD,CAAcN,QAAQ,yBCJ1BO,G,kNACJC,MAAQ,CACNN,KAAM,EACNC,QAAS,EACTC,IAAK,G,qDAGP,SAAgBV,GACde,KAAKC,UAAS,SAACF,GACb,OAAO,eACJd,EAASc,EAAMd,GAAU,Q,oBAKhC,WACE,IAAMW,EAAQM,OAAOC,OAAOH,KAAKD,OAAOK,QAAO,SAACC,EAAGC,GAAJ,OAAUD,EAAIC,KACzDC,EAAOP,KAAKD,MAAMN,KAAOG,EACzBY,MAAMD,KACRA,EAAO,GAET,IAAMV,EAAqBY,KAAKC,MAAa,IAAPH,GACtC,OACE,sBAAK7B,UAAU,MAAf,UACE,cAAC,EAAD,CACEE,QAASsB,OAAOS,KAAKX,KAAKD,OAC1BlB,gBAAiBmB,KAAKY,gBAAgBC,KAAKb,QAE7C,cAAC,EAAD,CACEP,KAAMO,KAAKD,MAAMN,KACjBC,QAASM,KAAKD,MAAML,QACpBC,IAAKK,KAAKD,MAAMJ,IAChBC,MAAOA,EACPC,mBAAoBA,W,GAjCZiB,cAyCHhB,IC3CfiB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U","file":"static/js/main.0b7ea774.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Section = ({ title, children }) => {\r\n  return (\r\n    <section>\r\n      <h2 className=\"title\">{title}</h2>\r\n      { children }\r\n    </section>\r\n  );\r\n}\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string,\r\n  children: PropTypes.any,\r\n};\r\n\r\nexport default Section;","\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Section from '../section/Section'\r\n\r\nimport s from './feedbackOptions.css';\r\n\r\nconst FeedbackOptions = ({ options, onLeaveFeedback }) => {\r\n  return (\r\n    <Section title=\"Please leave feedback\" className=\"title\">\r\n      <div className={s.buttons}>\r\n        {\r\n          options.map((option, i) => (\r\n            <button key={i}\r\n              className={s.button}\r\n              type=\"button\"\r\n              onClick={() => onLeaveFeedback(option)}>\r\n              {option}\r\n            </button>)\r\n          )\r\n        }\r\n      </div>\r\n    </Section>\r\n  )\r\n}\r\n\r\nFeedbackOptions.propTypes = {\r\n  onLeaveFeedback: PropTypes.func.isRequired,\r\n  options: PropTypes.array.isRequired,\r\n};\r\n\r\nexport default FeedbackOptions;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Notification = ({ message }) => (\r\n  <p className=\"notification-title\">{message}</p>\r\n);\r\n\r\nNotification.propTypes = {\r\n  message: PropTypes.string.isRequired,\r\n}\r\n\r\nexport default Notification;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Section from '../section/Section';\r\nimport Notification from '../notification/Notification';\r\n\r\nimport s from './statistics.css';\r\n\r\nfunction Statistics({ good, neutral, bad, total, positivePercentage }) {\r\n  return (\r\n    <Section title=\"Statistics\">\r\n      {!total\r\n        ? <Notification message=\"No feedback given\" />\r\n        : (\r\n          <div className={s.Statistics}>\r\n          <ul className=\"param-list\">\r\n            <li className=\"Statistics__item\">\r\n              Good: {good}\r\n            </li>\r\n            <li className=\"Statistics__item\">\r\n              Neutral: {neutral}\r\n            </li>\r\n            <li className=\"Statistics__item\">\r\n              Bad: {bad}\r\n            </li>\r\n            <li className=\"Statistics__item\">\r\n              Total: {total}\r\n            </li>\r\n            <li className=\"Statistics__item\">\r\n              Positive: {positivePercentage}%\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      )\r\n      }\r\n    </Section>\r\n  );\r\n}\r\n\r\n\r\n\r\nStatistics.propTypes = {\r\n  good: PropTypes.number,\r\n  bad: PropTypes.number,\r\n  neutral: PropTypes.number,\r\n  total: PropTypes.number,\r\n  positivePercentage: PropTypes.number,\r\n};\r\n\r\n\r\nexport default Statistics;","import React, { Component } from \"react\";\nimport FeedbackOptions from \"./components/feedbackOptions/FeedbackOptions.jsx\";\nimport Statistics from \"./components/statistics/Statistics.jsx\";\n// import Clock from \"./components/clock/Clock\";\n\nimport \"./App.css\";\n\nclass App extends Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n\n  incrementOption(option) {\n    this.setState((state) => {\n      return {\n        [option]: state[option] + 1,\n      };\n    });\n  }\n\n  render() {\n    const total = Object.values(this.state).reduce((a, b) => a + b);\n    let expr = this.state.good / total;\n    if (isNaN(expr)) {\n      expr = 0;\n    }\n    const positivePercentage = Math.floor(expr * 100);\n    return (\n      <div className=\"App\">\n        <FeedbackOptions\n          options={Object.keys(this.state)}\n          onLeaveFeedback={this.incrementOption.bind(this)}\n        />\n        <Statistics\n          good={this.state.good}\n          neutral={this.state.neutral}\n          bad={this.state.bad}\n          total={total}\n          positivePercentage={positivePercentage}\n        />\n        {/* <Clock /> */}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}